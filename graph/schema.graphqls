# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# abstrations for later extension
interface Node {
  id: ID!
}
# end abstractions

type Person implements Node @key (fields:"id") {
  id: ID!
  firstName: String!
  lastName: String!
  title: String!
}

type Query {
  people: [Person!]!
}

input CreatePerson {
  firstName: String!
  lastName: String!
  title: String
}

type PersonUpdate {
  previous: Person!
  current: Person!
  success: Boolean!
}

type PersonDelete {
  record: Person!
  success: Boolean!
}

input UpdatePerson {
  id: ID!
  firstName: String!
  lastName: String!
  title: String
}

input DeletePerson {
  id: ID!
}

type Mutation {
  CreatePerson(input: CreatePerson!): Person!
  UpdatePerson(input: UpdatePerson!): PersonUpdate!
  DeletePerson(input: DeletePerson!): PersonDelete!
  AttachPersonToOrganization(input:AttachPersonToOrganization): Node
}

input AttachPersonToOrganization {
  personId: String!
  organizationId: String!
}

extend union OrganizationResource = Person

extend type Organization @key (fields:"id"){
  id: ID! @external
  people: [Person!]
}

extend type Team @key (fields:"id"){
  id: ID! @external
  people: [Person!]
}